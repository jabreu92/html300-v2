*, *::before, *::after {
    box-sizing: border-box; /* content to look border box nicely */
    margin: 0; /* getting rid of margins */
}
/* height: 100vh; means the height of this element is equal to 100% of the viewport height.
 example: height: 50vh; If your screen height is 1000px, your element height will be equal to 500px (50% of 1000px). 
 height: calc(100% - 100px); will calculate the size of the element by using the value of the element
 */
body {
    height: 100vh;
    display: grid;
    place-items: center;
}

.card {
    width: 400px;
    
}

.card__content {
    text-align: center;
    position: relative;
    padding: 5em;
    transition: transform 3s;
    background: pink;
    transform-style: preserve-3d; /*We want this to rotate independent from the parent to do we go to card content and transform style  preserve 3d*/

}
/* Adding hover effect to the card parent element, but when we hover on the card we only want to rotate the content not the whole card */
.card:hover .card__content {
   transform: rotateY(.5turn); 
   
}

.card__front,
.card__back {
    position: absolute; /* Need to have front and back of the card overlap each other ( top of each other for the effect to work )*/
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 2em;
    backface-visibility: hidden; /** This comes to play when things are backwords it will hide the back side of the card **/
    transform-style: preserve-3d; /** will make the front and back have its own distance from the card **/
}

.card__front {
    background: lightgreen;
}

.card__title {
    /** this is open possibility due to preserve 3d property **/
    transform: translateZ(6rem); /** pulling the title towards us **/
    font-size: 3rem;
}

.card__subtitle {
    transform: translateZ(4rem);
}
.card__body {
    transform: translateZ(3rem);
}
.card__back {
    transform: rotateY(.5turn); /** will make the card content from the backside to not be backwards **/
    background: lightblue; /** will help hide text **/
}